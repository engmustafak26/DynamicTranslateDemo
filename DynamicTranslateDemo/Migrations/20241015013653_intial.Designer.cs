// <auto-generated />
using System;
using DynamicTranslateDemo.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DynamicTranslateDemo.Migrations
{
    [DbContext(typeof(DummyDBContext))]
    [Migration("20241015013653_intial")]
    partial class intial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DynamicTranslateDemo.Model.ChildLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MasterLookupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Property1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Property2")
                        .HasColumnType("int");

                    b.Property<bool?>("Property3")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MasterLookupId");

                    b.ToTable("ChildLookups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MasterLookupId = 1,
                            Name = "Microsoft"
                        },
                        new
                        {
                            Id = 2,
                            MasterLookupId = 1,
                            Name = "Oracle"
                        },
                        new
                        {
                            Id = 3,
                            MasterLookupId = 1,
                            Name = "Others"
                        },
                        new
                        {
                            Id = 4,
                            MasterLookupId = 2,
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = 5,
                            MasterLookupId = 2,
                            Name = "Palestine"
                        },
                        new
                        {
                            Id = 6,
                            MasterLookupId = 2,
                            Name = "Saudi Arabia"
                        });
                });

            modelBuilder.Entity("DynamicTranslateDemo.Model.MasterLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Property1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Property2")
                        .HasColumnType("int");

                    b.Property<bool?>("Property3")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MasterLookups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Software Companies"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Countries"
                        });
                });

            modelBuilder.Entity("DynamicTranslateDemo.Model.ChildLookup", b =>
                {
                    b.HasOne("DynamicTranslateDemo.Model.MasterLookup", "MasterLookup")
                        .WithMany("ChildLookups")
                        .HasForeignKey("MasterLookupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasterLookup");
                });

            modelBuilder.Entity("DynamicTranslateDemo.Model.MasterLookup", b =>
                {
                    b.Navigation("ChildLookups");
                });
#pragma warning restore 612, 618
        }
    }
}
